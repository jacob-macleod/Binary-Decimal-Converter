
import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLightLaf;
import javax.swing.UIManager;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author jacobm
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        numberInput = new javax.swing.JTextField();
        calculateBtn = new javax.swing.JButton();
        resultLbl = new javax.swing.JLabel();
        convertToBinaryBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Binary Decimal Converter");

        jLabel2.setText("Enter your binary or decimal number:");

        calculateBtn.setText("Convert to Decimal");
        calculateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBtnActionPerformed(evt);
            }
        });

        resultLbl.setText("= ");

        convertToBinaryBtn.setText("Convert to binary");
        convertToBinaryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertToBinaryBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 5, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultLbl)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calculateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(convertToBinaryBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(numberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculateBtn)
                    .addComponent(convertToBinaryBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultLbl))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBtnActionPerformed
        // Stores 1, 2, 4, 8, 16, 32, 62, 128, 256, etc to use for binary calculations
        int binaryCounter = 1;
        int convertedNumber = 0;
        
        // Turn the number given in numberInput (a binary number such as "10101") to an array
        String numberStr = numberInput.getText();
        String[] numberArr = numberStr.split("");
        
        // For each digit, if it is a 1, add either 1, 2, 4, 8 etc to a running total
        for (int i =0;i<numberArr.length; i++) {
            // Find the number to add to a running total
            int numberToAddToRunningTotal = Integer.valueOf(numberArr[i]) * binaryCounter;
            // Store the running total
            convertedNumber = Integer.valueOf(numberToAddToRunningTotal) + convertedNumber;
            
            // Stores 1, 2, 4, 8, 16, 32 etc depending on how many times the for loop iterates
            binaryCounter = binaryCounter * 2;
        }
        
        // When everthing is finished, update the text showing the result of the conversion
        resultLbl.setText("= " + Integer.toString(convertedNumber));
    }//GEN-LAST:event_calculateBtnActionPerformed

    private void convertToBinaryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertToBinaryBtnActionPerformed
        // Make array to store binary number
        int[] binaryNum = new int[1000];
        String n = numberInput.getText();
        int number = Integer.parseInt(n);
   
        // Make counter to iterate through array
        int i = 0;
        while (number > 0) 
        {
            // Divide the number by 2 and store remainder
            binaryNum[i] = number % 2;
            number = number / 2;
            i++;
        }
   
        // Pring the array in the reverse order
        for (int j = i - 1; j >= 0; j--) {
            resultLbl.setText("= " + Integer.toString(binaryNum[j]));
        }
                 
    }//GEN-LAST:event_convertToBinaryBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Flatlaf Darcula */
        try {
            UIManager.setLookAndFeel( new FlatDarculaLaf() );
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateBtn;
    private javax.swing.JButton convertToBinaryBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField numberInput;
    private javax.swing.JLabel resultLbl;
    // End of variables declaration//GEN-END:variables
}
